[main]

# establish db connection
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = java:jboss/eoozPublic

# set up jdbc realm
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource

jdbcRealm.permissionsLookupEnabled = true

jdbcRealm.authenticationQuery = SELECT PASSWORD FROM SYSTEMUSER WHERE USERNAME = ?
jdbcRealm.userRolesQuery = SELECT ROLENAME FROM USER_ROLE WHERE USERNAME = ?
jdbcRealm.permissionsQuery = SELECT PERMISSIONNAME FROM PERMISSION_ROLE WHERE ROLENAME = ?

# use built in cache manager
#builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $builtInCacheManager
#securityManager.realms = $jdbcRealm

authc.loginUrl = /login.jsp
authc.successUrl  = /member/do_redirect.jsp
authc.failureKeyAttribute= loginFailed

# password encryption
#hashService = org.apache.shiro.crypto.hash.DefaultHashService
#hashService.hashIterations = 500000
#hashService.hashAlgorithmName = SHA-256
#hashService.generatePublicSalt = true
# privateSalt needs to be base64-encoded in shiro.ini but not in the Java code
#hashService.privateSalt = myVERYSECRETBase64EncodedSalt

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

#passwordService.hashService = $hashService
passwordMatcher.passwordService = $passwordService

jdbcRealm.credentialsMatcher = $passwordMatcher 

[urls]
/login.jsp = authc
/member/employer/** = authc, roles[EMPLOYER]
/member/jobseeker/** = authc, roles[JOBSEEKER]
/member/do_redirect.jsp = authc
/logout = logout